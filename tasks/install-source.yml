---
- name: Install dev dependencies
  ansible.builtin.apt:
    pkg:
      - git
      - npm
      - gettext

- name: Create output directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ paperlessng_system_user }}"
    group: "{{ paperlessng_system_group }}"
    mode: "750"
  with_items:
    - "{{ tempdir.path }}/paperless-ngx"
    - "{{ tempdir.path }}/paperless-ngx/scripts"

- name: Prep the deployment
  block:
    - name: Create temporary git directory
      ansible.builtin.tempfile:
        state: directory
        path: "{{ paperlessng_directory }}"
      register: gitdir

    - name: Pull paperless-ngx
      ansible.builtin.git:
        repo: https://github.com/paperless-ngx/paperless-ngx.git
        dest: "{{ gitdir.path }}"
        version: "{{ paperlessng_version }}"
        refspec: +refs/pull/*:refs/pull/*

    - name: Compile frontend
      ansible.builtin.command:
        cmd: "{{ item }}"
      args:
        chdir: "{{ gitdir.path }}/src-ui"
      failed_when: false
      with_items:
        - npm install -g @angular/cli
        - npm install
        - ./node_modules/.bin/ng build --prod

    - name: Copy application into place
      ansible.builtin.copy:
        src: "{{ gitdir.path }}/{{ item.src }}"
        remote_src: true
        dest: "{{ tempdir.path }}/paperless-ngx/{{ item.dest | default('') }}"
      with_items:
        - src: CONTRIBUTING.md
        - src: LICENSE
        - src: Pipfile
        - src: Pipfile.lock
        - src: README.md
        - src: requirements.txt
        - src: gunicorn.conf.py
        - src: paperless.conf.example
          dest: paperless.conf

    - name: Glob all scripts
      ansible.builtin.find:
        paths: ["{{ gitdir.path }}/scripts/"]
        patterns:
          - "*.service"
          - "*.sh"
      register: glob

    - name: Copy scripts
      ansible.builtin.copy:
        src: "{{ item.path }}"
        remote_src: true
        dest: "{{ tempdir.path }}/paperless-ngx/scripts/"
      with_items:
        - "{{ glob.files }}"

    - name: Copy sources
      ansible.builtin.command:
        cmd: cp -r src/ {{ tempdir.path }}/paperless-ngx/src
      args:
        chdir: "{{ gitdir.path }}"

    - name: Create paperlessng venv
      ansible.builtin.command:
        cmd: python3 -m virtualenv {{ gitdir.path }}/.venv/ -p /usr/bin/python3

    - name: Install paperlessng requirements
      ansible.builtin.command:
        cmd: "{{ gitdir.path }}/.venv/bin/python3 -m pip install -r {{ gitdir.path }}/requirements.txt"

    - name: Compile messages
      ansible.builtin.command: "{{ gitdir.path }}/.venv/bin/python3 manage.py compilemessages"
      args:
        chdir: "{{ tempdir.path }}/paperless-ngx/src/"

    - name: Collect static files
      ansible.builtin.command: "{{ gitdir.path }}/.venv/bin/python3 manage.py collectstatic --no-input"
      args:
        chdir: "{{ tempdir.path }}/paperless-ngx/src/"

    - name: Remove pycache directories
      ansible.builtin.shell: find . -name __pycache__ | xargs rm -r
      args:
        chdir: "{{ tempdir.path }}"

    - name: Remove temporary git directory
      ansible.builtin.file:
        path: "{{ gitdir.path }}"
        state: absent

  become: true
  become_user: "{{ paperlessng_system_user }}"
